type: edu
files:
- name: src/converter/Main.java
  visible: true
  text: |
    package converter;

    public class Main {

        public static void main(String[] args) {
            // write your code here
        }
    }
  learner_created: false
- name: test/NumeralSystemConverterTest.java
  visible: false
  text: |-
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;
    import org.hyperskill.hstest.testing.TestedProgram;

    import java.util.Arrays;
    import java.util.List;
    import java.util.Random;

    public class NumeralSystemConverterTest extends StageTest<String> {

        @Override
        public List<TestCase<String>> generate() {

            return Arrays.asList(
                new TestCase<String>().setDynamicTesting(this::test1),
                new TestCase<String>().setDynamicTesting(this::test2),
                new TestCase<String>().setDynamicTesting(this::test3),
                new TestCase<String>().setDynamicTesting(this::test4),
                new TestCase<String>().setDynamicTesting(this::test5),
                new TestCase<String>().setDynamicTesting(this::test6),
                new TestCase<String>().setDynamicTesting(this::test7)
            );
        }

        //Check the exit command
        CheckResult test1() {
            TestedProgram main = new TestedProgram();
            String output = main.start().toLowerCase();

            if (!output.contains("/from decimal") || !output.contains("/to decimal") || !output.contains(
                "/exit")) {
                return CheckResult.wrong("Your program should prompt the user with the message \"Do you " +
                    "want to convert /from decimal of /to decimal? (To quit " +
                    "type /exit)\"");
            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }

        //Check conversion from decimal
        //to base 2
        CheckResult test2() {

            TestedProgram main = new TestedProgram();
            String output;
            String lastLine;
            String userResult;
            String actualResult;
            String[] lines;
            int randomNumber;

            main.start();

            output = main.execute("/from").toLowerCase();
            if (!output.contains("decimal")) {
                return CheckResult.wrong("Your program should ask the user for the decimal number to be " +
                    "converted if they enter the command \"/from\"");
            }

            randomNumber = Integer.parseInt(getRandomSource(10));
            actualResult = convertDecimalToBaseX(randomNumber, 2);

            output = main.execute(String.valueOf(randomNumber)).toLowerCase();
            if (!output.contains("target base")) {
                return CheckResult
                    .wrong("Your program should ask the user for the target base " +
                        "after they enter the decimal number .");
            }

            output = main.execute("2").toLowerCase();
            if (!output.contains("result:")) {
                return CheckResult
                    .wrong("Your program should print the result in the format " +
                        "\"Conversion result: CONVERTED_NUMBER\", where CONVERTED_NUMBER is " +
                        "the result of the conversion.");
            }

            lines = output.trim().split("\n");
            lastLine = lines[lines.length - 1];

            try {
                userResult = lines[0].substring(output.indexOf(":") + 1).trim();
            } catch (Exception ignored) {
                return CheckResult.wrong("Looks like your output is wrong! Make sure you print the result as in examples!");
            }

            if (!userResult.equalsIgnoreCase(actualResult)) {
                return CheckResult.wrong("The conversion result of your program is wrong");
            }

            if (main.isFinished()) {
                return CheckResult.wrong("Your program should not terminate until the user enters \"/exit\"");
            }

            if (!lastLine.contains("/from") || !lastLine.contains("/to decimal") || !lastLine.contains(
                "/exit")) {
                return CheckResult.wrong("Your program should show the command prompt after each conversion" +
                    " until the user enters \"/exit\"");
            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }

        //to base 16
        CheckResult test3() {
            TestedProgram main = new TestedProgram();
            String output;
            String lastLine;
            String userResult;
            String actualResult;
            String[] lines;
            int randomNumber;

            main.start();

            for (int i = 0; i < 5; i++) {
                randomNumber = Integer.parseInt(getRandomSource(10));
                actualResult = convertDecimalToBaseX(randomNumber, 16);
                main.execute("/from");
                main.execute(String.valueOf(randomNumber));

                output = main.execute("16").toLowerCase();
                lines = output.trim().split("\n");

                try {
                    userResult = lines[0].substring(output.indexOf(":") + 1).trim();
                    if (!userResult.equalsIgnoreCase(actualResult)) {
                        return CheckResult.wrong("The conversion result of your program is wrong");
                    }
                } catch (Exception exception) {
                    return CheckResult.wrong("Looks like your output has wrong format. Look at examples!");
                }

                if (main.isFinished()) {
                    return CheckResult.wrong("Your program should not terminate until the user enters \"/exit\"");
                }

                lastLine = lines[lines.length - 1];
                if (!lastLine.contains("/from") || !lastLine.contains("/to decimal") || !lastLine.contains(
                    "/exit")) {
                    return CheckResult.wrong("Your program should show the command prompt after each conversion" +
                        " until the user enters \"/exit\"");
                }

            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }

        //to base 8
        CheckResult test4() {
            TestedProgram main = new TestedProgram();
            String output;
            String lastLine;
            String userResult;
            String actualResult;
            String[] lines;
            int randomNumber;

            main.start();

            for (int i = 0; i < 5; i++) {
                randomNumber = Integer.parseInt(getRandomSource(10));
                actualResult = convertDecimalToBaseX(randomNumber, 8);
                main.execute("/from");
                main.execute(String.valueOf(randomNumber));

                output = main.execute("8").toLowerCase();
                lines = output.trim().split("\n");

                try {
                    userResult = lines[0].substring(output.indexOf(":") + 1).trim();
                    if (!userResult.equalsIgnoreCase(actualResult)) {
                        return CheckResult.wrong("The conversion result of your program is wrong");
                    }
                } catch (Exception exception) {
                    return CheckResult.wrong("Looks like your output has wrong format. Look at examples!");
                }

                if (main.isFinished()) {
                    return CheckResult.wrong("Your program should not terminate until the user enters \"/exit\"");
                }

                lastLine = lines[lines.length - 1];
                if (!lastLine.contains("/from") || !lastLine.contains("/to decimal") || !lastLine.contains(
                    "/exit")) {
                    return CheckResult.wrong("Your program should show the command prompt after each conversion" +
                        " until the user enters \"/exit\"");
                }

            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }

        //Check conversion to decimal
        //from base 2
        CheckResult test5() {
            TestedProgram main = new TestedProgram();
            String output;
            String lastLine;
            String userResult;
            String actualResult;
            String randomSourceNumber;
            String[] lines;

            main.start();

            output = main.execute("/to").toLowerCase();
            if (!output.contains("source number")) {
                return CheckResult.wrong("Your program should ask the user for the source number to be " +
                    "converted if they enter the command \"/to\", with the " +
                    "message \"Enter source number:\"");
            }

            randomSourceNumber = getRandomSource(2).toLowerCase();
            actualResult = convertBaseXToDecimal(randomSourceNumber, 2);

            output = main.execute(randomSourceNumber).toLowerCase();
            if (!output.contains("source base")) {
                return CheckResult.wrong("Your program should request for the source base after getting the" +
                    " source number from the user with the message \"Enter " +
                    "source base:\"");
            }

            output = main.execute("2").toLowerCase();
            if (!output.contains("decimal result:")) {
                return CheckResult.wrong("Your program should print the conversion result in the format " +
                    "\"Conversion to decimal result: CONVERTED_NUMBER\", where" +
                    " CONVERTED_NUMBER is the result of the conversion");
            }

            lines = output.trim().split("\n");
            lastLine = lines[lines.length - 1];


            try {
                userResult = lines[0].substring(output.indexOf(":") + 1).trim();
                if (!userResult.equalsIgnoreCase(actualResult)) {
                    return CheckResult.wrong("The conversion result of your program is wrong");
                }
            } catch (Exception exception) {
                return CheckResult.wrong("Looks like your output has wrong format. Look at examples!");
            }


            if (main.isFinished()) {
                return CheckResult.wrong("Your program should not terminate until the user enters \"/exit\"");
            }

            if (!lastLine.contains("/from") || !lastLine.contains("/to decimal") || !lastLine.contains(
                "/exit")) {
                return CheckResult.wrong("Your program should show the command prompt after each conversion" +
                    " until the user enters \"/exit\"");
            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }

        //from base 8
        CheckResult test6() {
            TestedProgram main = new TestedProgram();
            String output;
            String lastLine;
            String userResult;
            String actualResult;
            String randomSourceNumber;
            String[] lines;

            main.start();

            for (int i = 0; i < 5; i++) {
                main.execute("/to");

                randomSourceNumber = getRandomSource(8);
                actualResult = convertBaseXToDecimal(randomSourceNumber, 8);

                main.execute(randomSourceNumber);
                output = main.execute("8").toLowerCase();

                lines = output.trim().split("\n");
                lastLine = lines[lines.length - 1];

                try {
                    userResult = lines[0].substring(output.indexOf(":") + 1).trim();
                    if (!userResult.equalsIgnoreCase(actualResult)) {
                        return CheckResult.wrong("The conversion result of your program is wrong");
                    }
                } catch (Exception exception) {
                    return CheckResult.wrong("Looks like your output has wrong format. Look at examples!");
                }

                if (main.isFinished()) {
                    return CheckResult.wrong("Your program should not terminate until the user enters \"/exit\"");
                }

                if (!lastLine.contains("/from") || !lastLine.contains("/to decimal") || !lastLine.contains(
                    "/exit")) {
                    return CheckResult.wrong("Your program should show the command prompt after each conversion" +
                        " until the user enters \"/exit\"");
                }

            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }

        //from base 16
        CheckResult test7() {
            TestedProgram main = new TestedProgram();
            String output;
            String lastLine;
            String userResult;
            String actualResult;
            String randomSourceNumber;
            String[] lines;

            main.start();

            for (int i = 0; i < 5; i++) {
                main.execute("/to");

                randomSourceNumber = getRandomSource(16);
                actualResult = convertBaseXToDecimal(randomSourceNumber, 16);

                main.execute(randomSourceNumber);
                output = main.execute("16").toLowerCase();

                lines = output.trim().split("\n");
                lastLine = lines[lines.length - 1];

                try {
                    userResult = lines[0].substring(output.indexOf(":") + 1).trim();
                    if (!userResult.equalsIgnoreCase(actualResult)) {
                        return CheckResult.wrong("The conversion result of your program is wrong");
                    }
                } catch (Exception exception) {
                    return CheckResult.wrong("Looks like your output has wrong format. Look at examples!");
                }

                if (main.isFinished()) {
                    return CheckResult.wrong("Your program should not terminate until the user enters \"/exit\"");
                }

                if (!lastLine.contains("/from") || !lastLine.contains("/to decimal") || !lastLine.contains(
                    "/exit")) {
                    return CheckResult.wrong("Your program should show the command prompt after each conversion" +
                        " until the user enters \"/exit\"");
                }

            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }


        //Helper methods
        String convertDecimalToBaseX(int num, int targetBase) {
            return Integer.toString(num, targetBase);
        }

        String convertBaseXToDecimal(String number, int sourceBase) {
            return String.valueOf(Integer.parseInt(number, sourceBase));
        }

        String getRandomSource(int sourceBase) {

            int n = new Random().nextInt(1000);

            return Integer.toString(n, sourceBase);

        }
    }
  learner_created: false
- name: src/converter/DisplayAndControl.java
  visible: true
  text: |
    package converter;

    import converter.presentation.ConvertFromBase10;
    import converter.presentation.ConvertToBase10;

    import java.util.Locale;
    import java.util.Scanner;

    public class DisplayAndControl {

        private final Scanner scanner;
        private final ConvertToBase10 convertToBase10;
        private final ConvertFromBase10 convertFromBase10;

        public DisplayAndControl() {
            this.scanner = new Scanner(System.in);
            convertFromBase10 = new ConvertFromBase10(scanner);
            convertToBase10 = new ConvertToBase10(scanner);
        }

        public void display(){
            int i = 1;
            do {
                System.out.println("Do you want to convert /from decimal or /to decimal? (To quit type /exit)");
                String input = scanner.nextLine().toLowerCase(Locale.ROOT);
                switch (input) {
                    case "/from":
                        convertFromBase10.view();
                        break;
                    case "/to":
                        convertToBase10.view();
                        break;
                    case "/exit":
                        i = 0;
                        break;
                    default:
                        break;
                }
            }while(i != 0);
            System.exit(0);
        }
    }
  learner_created: true
- name: src/converter/presentation/ConvertToBase10.java
  visible: true
  text: |
    package converter.presentation;

    import java.util.Scanner;

    public class ConvertToBase10 {

        private final Scanner scanner;

        public ConvertToBase10(Scanner scanner) {
            this.scanner = scanner;
        }

        public void view() {

            System.out.print("Enter source number: ");
            String line = scanner.next();
            System.out.print("Enter source base: ");
            int line1 = scanner.nextInt();
            int result = toDecimal(line, line1);
            System.out.printf("Conversion to decimal result: %s\n", result);

        }

        // To return value of a char.
    // For example, 2 is returned
    // for '2'. 10 is returned
    // for 'A', 11 for 'B'
        private int val(char c)
        {
            if (c >= '0' && c <= '9')
                return (int)c - '0';
            else
                return (int)c - 'A' + 10;
        }

        // Function to convert a
    // number from given base
    // 'b' to decimal
        private int toDecimal(String str,
                          int base)
        {
            int len = str.length();
            int power = 1; // Initialize
            // power of base
            int num = 0; // Initialize result
            int i;

            // Decimal equivalent is
            // str[len-1]*1 + str[len-2] *
            // base + str[len-3]*(base^2) + ...
            for (i = len - 1; i >= 0; i--)
            {
                // A digit in input number
                // must be less than
                // number's base
                if (val(str.charAt(i)) >= base)
                {
                    System.out.println("Invalid Number");
                    return -1;
                }

                num += val(str.charAt(i)) * power;
                power = power * base;
            }

            return num;
        }
    }
  learner_created: true
- name: src/converter/presentation/ConvertFromBase10.java
  visible: true
  text: |
    package converter.presentation;

    import java.util.Scanner;

    public class ConvertFromBase10 {
        private final Scanner scanner;

        public ConvertFromBase10(Scanner scanner) {
            this.scanner = scanner;
        }

        public void view() {

                System.out.print("Enter number in decimal system: ");
                int line = scanner.nextInt();
                System.out.print("Enter target base: ");
                int line1 = scanner.nextInt();
                String result = fromDecimal(line1, line);
                System.out.printf("Conversion result: %s\n", result);

        }

        // To return char for a value. For
    // example '2' is returned for 2.
    // 'A' is returned for 10. 'B' for 11
        private char reVal(int num)
        {
            if (num >= 0 && num <= 9)
                return (char)(num + 48);
            else
                return (char)(num - 10 + 65);
        }

        // Function to convert a given decimal number
    // to a base 'base' and
        private String fromDecimal(int base1, int inputNum)
        {
            String s = "";

            // Convert input number is given
            // base by repeatedly dividing it
            // by base and taking remainder
            while (inputNum > 0)
            {
                s += reVal(inputNum % base1);
                inputNum /= base1;
            }
            StringBuilder ix = new StringBuilder();

            // append a string into StringBuilder input1
            ix.append(s);

            // Reverse the result
            return new String(ix.reverse());
        }

    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/181/stages/914/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Thu, 03 Mar 2022 14:38:07 UTC
record: -1
